# Generated by Django 4.0 on 2023-02-20 23:56

import api.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('group_name', models.CharField(max_length=50)),
                ('bolge', models.CharField(blank=True, max_length=70, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('tmfb', models.CharField(blank=True, max_length=500, null=True)),
                ('adres', models.CharField(blank=True, max_length=500, null=True)),
                ('tmfbbit', models.CharField(blank=True, max_length=500, null=True)),
                ('firmayet', models.CharField(blank=True, max_length=500, null=True)),
                ('lokasyon', models.CharField(blank=True, max_length=70, null=True)),
                ('bolge', models.CharField(blank=True, max_length=70, null=True)),
                ('gonderen', models.BooleanField(blank=True, default=False, null=True)),
                ('alici', models.BooleanField(blank=True, default=False, null=True)),
                ('bosaltan', models.BooleanField(blank=True, default=False, null=True)),
                ('yukleyen', models.BooleanField(blank=True, default=False, null=True)),
                ('dolduran', models.BooleanField(blank=True, default=False, null=True)),
                ('paketleyen', models.BooleanField(blank=True, default=False, null=True)),
                ('tasimaci', models.BooleanField(blank=True, default=False, null=True)),
                ('atik_alan', models.BooleanField(blank=True, default=False, null=True)),
                ('gaz_tup', models.BooleanField(blank=True, default=False, null=True)),
                ('stok_alan', models.BooleanField(blank=True, default=False, null=True)),
                ('stok_tank', models.BooleanField(blank=True, default=False, null=True)),
                ('paketleme', models.BooleanField(blank=True, default=False, null=True)),
                ('tasima', models.BooleanField(blank=True, default=False, null=True)),
                ('mainCategory', models.CharField(blank=True, max_length=50, null=True)),
                ('atama', models.ManyToManyField(blank=True, related_name='atama', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(blank=True, default='None', max_length=500, null=True)),
                ('tmfb_belgesi', models.FileField(blank=True, default=None, null=True, upload_to=api.models.upload_path)),
                ('logo', models.ImageField(blank=True, default=None, null=True, upload_to=api.models.upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('months', models.CharField(blank=True, max_length=500, null=True)),
                ('month_no', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('questionText', models.CharField(max_length=500)),
                ('answerA', models.CharField(max_length=500)),
                ('answerB', models.CharField(max_length=500)),
                ('answerC', models.CharField(max_length=500)),
                ('currectAnswer', models.CharField(max_length=500)),
                ('allYear', models.BooleanField(blank=True, null=True)),
                ('subCategory', models.CharField(max_length=500)),
                ('company', models.ManyToManyField(blank=True, related_name='company', to='api.Company')),
                ('spesificMonth', models.ManyToManyField(blank=True, related_name='month', to='api.Month')),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500)),
                ('start', models.CharField(max_length=500)),
                ('end', models.CharField(max_length=500)),
                ('ziyaretarih', models.CharField(max_length=500)),
                ('allDay', models.BooleanField(blank=True, null=True)),
                ('backgroundColor', models.CharField(max_length=500)),
                ('desc', models.CharField(blank=True, max_length=500, null=True)),
                ('companyName', models.CharField(max_length=500)),
                ('author', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='files',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.files'),
        ),
        migrations.AddField(
            model_name='company',
            name='firmauser',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.customuser'),
        ),
        migrations.AddField(
            model_name='company',
            name='user',
            field=models.ManyToManyField(blank=True, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, max_length=500, null=True)),
                ('takedAnswer', models.CharField(blank=True, max_length=500, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
            ],
        ),
        migrations.CreateModel(
            name='Allftp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('companyName', models.CharField(max_length=500)),
                ('tarih', models.DateField(auto_now_add=True)),
                ('katilimci', models.CharField(max_length=500)),
                ('cevapA', models.TextField(max_length=500)),
                ('cevapB', models.TextField(max_length=500)),
                ('onay', models.BooleanField(blank=True, null=True)),
                ('author', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
